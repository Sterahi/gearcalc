{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sterahi/Documents/projects/gearcalc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/sterahi/Documents/projects/gearcalc/src/Components/Classes/Classes.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n            width:32%;\\n            margin-top:5px;\\n        \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n            display:flex;\\n            flex-wrap: wrap;\\n            align-items: center;\\n            justify-content:space-around;\\n        \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { css, cx } from 'emotion';\n\nclass Classes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gear: [],\n      loading: false\n    };\n  }\n\n  getGear() {\n    this.setState({\n      loading: true\n    });\n    fetch(\"https://xivapi.com/search?filters=LevelEquip=70,LevelItem>=340,ClassJobCategory.ID=38,EquipSlotCategoryTargetID=1\").then(res => {\n      return res.json();\n    }).then(items => {\n      this.setState({\n        gear: items.Results,\n        loading: false\n      }, () => {\n        this.getGearStats(items.Results);\n      });\n    });\n  }\n\n  getGearStats(object) {\n    let storage = {};\n    object.map((item, index) => {\n      fetch(\"https://xivapi.com\".concat(item.Url)).then(res => {\n        return res.json();\n      }).then(stats => {\n        storage[item.Name] = [\"\".concat(stats.BaseParam0.Name, \": \").concat(stats.BaseParamValue0), \"\".concat(stats.BaseParam1.Name, \": \").concat(stats.BaseParamValue1), \"\".concat(stats.BaseParam2.Name, \": \").concat(stats.BaseParamValue2), \"\".concat(stats.BaseParam3.Name, \": \").concat(stats.BaseParamValue3), \"Materia: \".concat(stats.MateriaSlotCount)];\n      }).then(() => {\n        this.setState({\n          gearStats: storage\n        });\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.getGear();\n  }\n\n  render() {\n    const _this$state = this.state,\n          gear = _this$state.gear,\n          gearStats = _this$state.gearStats;\n    const classSelector = css(_templateObject());\n    const itemStyle = css(_templateObject2());\n    return React.createElement(\"div\", {\n      className: cx(classSelector, 'class-selector'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, (gear || []).map(item => {\n      if (gearStats === undefined) {\n        return React.createElement(\"div\", {\n          key: item.ID,\n          className: cx(itemStyle, 'item'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"https://xivapi.com/\".concat(item.Icon),\n          alt: item.Name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, item.Name));\n      } else {\n        return React.createElement(\"div\", {\n          key: item.ID,\n          className: cx(itemStyle, 'item'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"https://xivapi.com/\".concat(item.Icon),\n          alt: item.Name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, item.Name), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }), (gearStats[item.Name] || []).map((stats, index) => {\n          return React.createElement(\"span\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, stats, \" \");\n        }));\n      }\n    }));\n  }\n\n}\n\nexport default Classes;","map":{"version":3,"sources":["/home/sterahi/Documents/projects/gearcalc/src/Components/Classes/Classes.js"],"names":["React","css","cx","Classes","Component","constructor","props","state","gear","loading","getGear","setState","fetch","then","res","json","items","Results","getGearStats","object","storage","map","item","index","Url","stats","Name","BaseParam0","BaseParamValue0","BaseParam1","BaseParamValue1","BaseParam2","BaseParamValue2","BaseParam3","BaseParamValue3","MateriaSlotCount","gearStats","componentWillMount","render","classSelector","itemStyle","undefined","ID","Icon"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { css, cx } from 'emotion'\n\nclass Classes extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            gear: [],\n            loading: false\n        }\n    }\n    getGear() {\n        this.setState({\n            loading: true\n        })\n        fetch(\"https://xivapi.com/search?filters=LevelEquip=70,LevelItem>=340,ClassJobCategory.ID=38,EquipSlotCategoryTargetID=1\")\n            .then(res => {\n                return res.json()\n            }).then(items => {\n                this.setState({\n                    gear: items.Results,\n                    loading: false\n                }, () => {\n                    this.getGearStats(items.Results)\n                })\n            })\n    }\n    getGearStats(object) {\n        let storage = {}\n        object.map((item, index) => {\n            fetch(`https://xivapi.com${item.Url}`).then(res => {\n                return res.json()\n            }).then(stats => {\n                storage[item.Name] = [\n                    `${stats.BaseParam0.Name}: ${stats.BaseParamValue0}`,\n                    `${stats.BaseParam1.Name}: ${stats.BaseParamValue1}`,\n                    `${stats.BaseParam2.Name}: ${stats.BaseParamValue2}`,\n                    `${stats.BaseParam3.Name}: ${stats.BaseParamValue3}`,\n                    `Materia: ${stats.MateriaSlotCount}`\n                ]\n            }).then(() => {\n                this.setState({\n                    gearStats: storage\n                })\n            })\n        })\n    }\n    componentWillMount() {\n        this.getGear()\n    }\n    render() {\n        const { gear, gearStats } = this.state\n        const classSelector = css`\n            display:flex;\n            flex-wrap: wrap;\n            align-items: center;\n            justify-content:space-around;\n        `\n        const itemStyle = css`\n            width:32%;\n            margin-top:5px;\n        `\n        return (\n            <div className = {cx(classSelector, 'class-selector')}>\n                {\n                    (gear||[]).map((item) => {\n                        if(gearStats === undefined) {\n                            return(\n                                <div key = {item.ID} className = { cx(itemStyle, 'item')}>\n                                    <img src = {`https://xivapi.com/${item.Icon}`} alt = {item.Name} />\n                                    <span>{item.Name}</span>\n                                </div>\n                            )\n                        } else {\n                            return(\n                                <div key = {item.ID} className = {cx(itemStyle, 'item')}>\n                                    <img src = {`https://xivapi.com/${item.Icon}`} alt = {item.Name} />\n                                    <span>{item.Name}</span><br />\n                                    {\n                                        (gearStats[item.Name] || []).map((stats, index) => {\n                                            return (\n                                                <span key = {index}>{stats} </span>\n                                            )\n                                        })\n                                    }\n                                </div>\n                            )\n                        }\n                    })\n                }\n            </div>\n        )\n    }\n}\nexport default Classes"]},"metadata":{},"sourceType":"module"}